[{"/home/kot/Desktop/create-documents/src/index.js":"1","/home/kot/Desktop/create-documents/src/App.js":"2","/home/kot/Desktop/create-documents/src/serviceWorker.js":"3","/home/kot/Desktop/create-documents/src/pages/Page404/Page404.js":"4","/home/kot/Desktop/create-documents/src/routes/AppRoutes.js":"5","/home/kot/Desktop/create-documents/src/pages/StartPage/StartPage.js":"6","/home/kot/Desktop/create-documents/src/components/form/TextInput/TextInput.js":"7","/home/kot/Desktop/create-documents/src/components/form/SubmitButton/SubmitButton.js":"8","/home/kot/Desktop/create-documents/src/components/form/InfoLabel/InfoLabel.js":"9","/home/kot/Desktop/create-documents/src/components/FillInputs/FillInputs.js":"10","/home/kot/Desktop/create-documents/src/components/DocumentsPreview/DocumentsPreview.js":"11","/home/kot/Desktop/create-documents/src/components/Act/Act.js":"12","/home/kot/Desktop/create-documents/src/store/store.js":"13","/home/kot/Desktop/create-documents/src/store/reducer.js":"14","/home/kot/Desktop/create-documents/src/store/inputData/reducer.js":"15","/home/kot/Desktop/create-documents/src/store/inputData/types.js":"16","/home/kot/Desktop/create-documents/src/store/inputData/selectors.js":"17","/home/kot/Desktop/create-documents/src/store/inputData/actions.js":"18","/home/kot/Desktop/create-documents/src/components/Invoice/Invoice.js":"19","/home/kot/Desktop/create-documents/src/components/Payment/Payment.js":"20","/home/kot/Desktop/create-documents/src/components/PreviewAct/PreviewAct.js":"21","/home/kot/Desktop/create-documents/src/components/form/ImageInput/ImageInput.js":"22","/home/kot/Desktop/create-documents/src/components/PreviewInvoice/PreviewInvoice.js":"23","/home/kot/Desktop/create-documents/src/components/PreviewPayment/PreviewPayment.js":"24","/home/kot/Desktop/create-documents/src/components/form/TableItem/TableItem.js":"25"},{"size":517,"mtime":1608895445972,"results":"26","hashOfConfig":"27"},{"size":284,"mtime":1608745257733,"results":"28","hashOfConfig":"27"},{"size":5086,"mtime":1602966954000,"results":"29","hashOfConfig":"27"},{"size":476,"mtime":1608637304117,"results":"30","hashOfConfig":"27"},{"size":1183,"mtime":1609071429760,"results":"31","hashOfConfig":"27"},{"size":971,"mtime":1609692365437,"results":"32","hashOfConfig":"27"},{"size":511,"mtime":1609320479495,"results":"33","hashOfConfig":"27"},{"size":298,"mtime":1608725858521,"results":"34","hashOfConfig":"27"},{"size":168,"mtime":1608647210671,"results":"35","hashOfConfig":"27"},{"size":29560,"mtime":1609697785899,"results":"36","hashOfConfig":"27"},{"size":1338,"mtime":1609692359681,"results":"37","hashOfConfig":"27"},{"size":22612,"mtime":1609681308112,"results":"38","hashOfConfig":"27"},{"size":341,"mtime":1608737429352,"results":"39","hashOfConfig":"27"},{"size":170,"mtime":1608737383225,"results":"40","hashOfConfig":"27"},{"size":3833,"mtime":1609687293209,"results":"41","hashOfConfig":"27"},{"size":287,"mtime":1608895505604,"results":"42","hashOfConfig":"27"},{"size":313,"mtime":1608895608155,"results":"43","hashOfConfig":"27"},{"size":561,"mtime":1608895605895,"results":"44","hashOfConfig":"27"},{"size":28092,"mtime":1609697373172,"results":"45","hashOfConfig":"27"},{"size":20466,"mtime":1609697375180,"results":"46","hashOfConfig":"27"},{"size":5344,"mtime":1609694477895,"results":"47","hashOfConfig":"27"},{"size":717,"mtime":1609417652751,"results":"48","hashOfConfig":"27"},{"size":4907,"mtime":1609694472867,"results":"49","hashOfConfig":"27"},{"size":4370,"mtime":1609694475871,"results":"50","hashOfConfig":"27"},{"size":1049,"mtime":1609692177083,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"h1cizr",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/kot/Desktop/create-documents/src/index.js",[],["107","108"],"/home/kot/Desktop/create-documents/src/App.js",[],"/home/kot/Desktop/create-documents/src/serviceWorker.js",[],"/home/kot/Desktop/create-documents/src/pages/Page404/Page404.js",[],"/home/kot/Desktop/create-documents/src/routes/AppRoutes.js",[],"/home/kot/Desktop/create-documents/src/pages/StartPage/StartPage.js",[],"/home/kot/Desktop/create-documents/src/components/form/TextInput/TextInput.js",[],"/home/kot/Desktop/create-documents/src/components/form/SubmitButton/SubmitButton.js",[],"/home/kot/Desktop/create-documents/src/components/form/InfoLabel/InfoLabel.js",[],"/home/kot/Desktop/create-documents/src/components/FillInputs/FillInputs.js",[],"/home/kot/Desktop/create-documents/src/components/DocumentsPreview/DocumentsPreview.js",[],"/home/kot/Desktop/create-documents/src/components/Act/Act.js",[],"/home/kot/Desktop/create-documents/src/store/store.js",[],"/home/kot/Desktop/create-documents/src/store/reducer.js",[],"/home/kot/Desktop/create-documents/src/store/inputData/reducer.js",[],"/home/kot/Desktop/create-documents/src/store/inputData/types.js",[],"/home/kot/Desktop/create-documents/src/store/inputData/selectors.js",[],"/home/kot/Desktop/create-documents/src/store/inputData/actions.js",[],"/home/kot/Desktop/create-documents/src/components/Invoice/Invoice.js",[],"/home/kot/Desktop/create-documents/src/components/Payment/Payment.js",["109"],"import React from 'react';\nimport { Page, Text, View, Document, StyleSheet, Font, Image } from '@react-pdf/renderer';\nimport Regular from '../../utils/font/Roboto/Roboto-Regular.ttf';\nimport Bold from '../../utils/font/Roboto/Roboto-Bold.ttf';\nimport Italic from '../../utils/font/Roboto/Roboto-Italic.ttf';\nimport numberToWordsRu from 'number-to-words-ru';\n\nFont.register({\n    family: 'Roboto',\n    fonts: [\n        {\n            src: Regular\n        },\n        {\n            src: Bold,\n            fontWeight: 'bold'\n        },\n        {\n            src: Italic,\n            fontWeight: 'normal',\n            fontStyle: 'italic'\n        },\n    ]\n})\n\nconst styles = StyleSheet.create({\n    page: {\n        padding: 20,\n        fontFamily: 'Roboto',\n        fontSize: 9,\n    },\n    pageInfo: {\n        marginLeft: 250,\n        paddingTop: 10,\n        paddingBottom: 10,\n        fontSize: 7,\n    },\n    formInfo: {\n        fontWeight: 'bold',\n        marginTop: 10,\n    },\n    personBlock: {\n        flexDirection: 'row',\n    },  \n    executorMain: {\n        width: '60%',\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        padding: 1,\n    },\n    exexcutorTitle: {\n        fontWeight: 'bold',\n    },\n    executorBINNumber: {\n        fontWeight: 'normal',\n        flexDirection: 'row',\n    },\n    executorIIK: {\n        width: '25%',\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        fontWeight: 'bold',\n        padding: 1,\n        textAlign: 'center',\n\n    },\n    executorKbe: {\n        width: '15%',\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        fontWeight: 'bold',\n        padding: 1,\n        textAlign: 'center',\n    },\n    executorName: {\n        minHeight: 25,\n        fontWeight: 'bold',\n\n    },\n    executorNumbers: {\n        paddingTop: 10,\n    },\n    exexcutorBIK: {\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        fontWeight: 'bold',\n        padding: 1,\n        textAlign: 'center',\n        width: '15%',\n\n    },\n    executorCode: {\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        fontWeight: 'bold',\n        padding: 1,\n        textAlign: 'center',\n        width: '25%',\n    },\n    executorAddNumbers: {\n        paddingTop: 5,\n        paddingBottom: 5,\n    },\n    paymentTitle: {\n        fontSize: 11,\n        fontWeight: 'bold',\n        marginTop: 25,\n    },\n    paymentTitleText: {\n        flexDirection: 'row',\n    },\n    line: {\n        marginTop: 5,\n        marginBottom: 5,\n        width: '100%',\n        borderColor: 'black',\n        borderStyle: 'solid',\n        borderBottom: 3,\n    },\n    shipmentInfo: {\n        flexDirection: 'row',\n        marginTop: 10,\n    },\n    shipmentPerson: {\n        width: '15%',\n    },\n    shipmentData: {\n        width: '85%',\n        fontWeight: 'bold',\n        flexDirection: 'row',\n    },\n    contractInfo: {\n        flexDirection: 'row',\n        marginTop: 10,\n    },  \n    contractData: {\n        flexDirection: 'row',\n    },\n    tableHeader: {\n        marginTop: 10,\n        fontWeight: 'bold',\n    },\n    tableRow: {\n        flexDirection: 'row',\n        marginTop: -0.5,\n        marginBottom: -0.5,\n    },  \n    firstCol: {\n        width: '4%',\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        height: '100%',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    secondCol: {\n        width: '10%',\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        height: '100%',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n    },\n    thirdCol: {\n        width: '37%',\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        height: '100%',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingTop: 2,\n        paddingBottom: 2,\n        paddingLeft: 3,\n        paddingRight: 3,\n\n    },\n    fourthCol: {\n        width: '10%',\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        height: '100%',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n    },\n    fifthCol: {\n        width: '10%',\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        height: '100%',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n    },\n    sixthCol: {\n        width: '15%',\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        height: '100%',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n    },\n    seventhCol: {\n        width: '15%',\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        margin: -0.5,\n        height: '100%',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    tableFooter: {\n        width: '100%',\n        paddingTop: 10,\n    },\n    fullCost: {\n        flexDirection: 'row',\n        width: '100%',\n        justifyContent: 'flex-end',\n        fontWeight: 'bold',\n    },\n    VATsize: {\n        flexDirection: 'row',\n        width: '100%',\n        justifyContent: 'flex-end',\n        fontWeight: 'bold',\n    },\n    totalInfo: {\n        width: '15%',\n        textAlign: 'right',\n        paddingRight: 5,\n\n\n    },\n    fullCostText: {\n        width: '15%',\n        textAlign: 'right',\n        paddingRight: 5,\n    },\n    fullCostData: {\n        flexDirection: 'row',\n    },\n    fullCostInfo: {\n        marginTop: 10,\n    },\n    fullCostInWord: {\n        fontWeight: 'bold',\n        flexDirection: 'row',\n    },\n    signatureBlock: {\n        flexDirection: 'row',\n        position: 'relative',\n        marginTop: 13,\n    },\n    executorSecondName: {\n        width: '40%',\n        borderBottom: 1,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        marginLeft: 10,\n    },\n    executorSignatureView: {\n        position: 'absolute',\n        top: -30,\n        left: 320,\n        width: 70,\n    },\n    executorStampView: {\n        position: 'absolute',\n        top: -30,\n        left: 350,\n        width: 70,\n    },\n    \n    \n})\n\nconst Payment = ({ docDate, docNumber, VATRate, procedureDate, paymentNumber, paymentDate, client, clientBINNumber, clientAdress, clientBank, clientIIKNumber, clientBIKBank, executor, executorBINNumber, executorAdress, executorIIK, executorBank, beneficiary, beneficiaryTaxNumber, executorKbe, executorBankBIK, executorBankCode, contract, contractDate, contractСonditions, destination, proxy, departureMethod, CMR, shipper, consignee, totalPayableForAll, includingVAT, totalItems, totalForAmount, currency, inventoryUsageInformation, numberOfPafes, documentsList, executorPosition, executorFullName, executivePersonSupplier, executivePersonSupplierPosition, clientPosition, clientFullName, сhiefAccountant, dateOfSigning, tableInfo,}) => {\n    const allCosts = tableInfo.map((i) => i.quantity*i.unitPrice);\n    const allQuantity = tableInfo.map((i) => +i.quantity);\n\n    const executorSignature = localStorage.getItem('executorSignature');\n    const executorStamp = localStorage.getItem('executorStamp');\n    // const clientSignature = localStorage.getItem('clientSignature');\n    // const clientStamp = localStorage.getItem('clientStamp');\n  \n\n    const sumOfArrItems = (arr) => {\n      let sum=0; \n      if(arr.length !== 0) {\n        for(let i=0; i<arr.length; i++) {\n          sum = sum+parseInt(arr[i])\n        } \n      }\n      return sum;\n    }\n    const fullCost = sumOfArrItems(allCosts);\n    const total = sumOfArrItems(allQuantity);\n    const totalVAT = VATRate === '100' ? 0 :  Math.round(sumOfArrItems(allCosts)*VATRate/100);\n    const totalPay = fullCost + totalVAT;\n    const totalPayWord =  numberToWordsRu.convert(totalPay, {\n            currency: {\n            currencyNameCases: ['тенге', 'тенге', 'тенге'],\n            fractionalPartNameCases: ['тиын', 'тиын', 'тиын'],\n            currencyNounGender: {\n                    integer: 2,\n                    fractionalPart: 0,\n                },\n            }\n        }\n    );\n\n    const TableRow = ({ docDate, docNumber, num, nameOfGoods, measure, quantity, unitPrice, productCode}) => (\n        <View style={styles.tableRow}>\n          <View style={styles.firstCol}>\n            <View style={styles.tableCell}>\n              <Text>{num} </Text>\n            </View>\n          </View>\n          <View style={styles.secondCol}>\n            <View style={styles.tableCell}>\n              <Text>{productCode} </Text>\n            </View>\n          </View>    \n          <View style={styles.thirdCol}>\n            <View style={styles.tableCell}>\n              <Text>{nameOfGoods} </Text>\n            </View>\n          </View>\n          <View style={styles.fourthCol}>\n            <View style={styles.tableCell}>\n              <Text>{quantity} </Text>\n            </View>\n          </View>\n          <View style={styles.fifthCol}>\n            <View style={styles.tableCell}>\n              <Text>{measure} </Text>\n            </View>\n          </View>\n          <View style={styles.sixthCol}>\n            <View style={styles.tableCell}>\n              <Text>{unitPrice} </Text>\n            </View>\n          </View>\n          <View style={styles.seventhCol}>\n            <View style={styles.tableCell}>\n              <Text>{unitPrice*quantity} </Text>\n            </View>\n          </View>\n        </View>\n    )\n\n    const tableArr = tableInfo.map((i, index) => (\n        <TableRow \n            key={index}\n            num={index+1}\n            nameOfGoods={i.nameOfGoods}\n            VATRate={VATRate}\n            measure={i.measure}\n            quantity={i.quantity}\n            unitPrice={i.unitPrice}\n            productCode={i.productCode}\n        />\n        )\n    )\n\n\n    return (\n        <Document>\n            <Page size='A4' style={styles.page}>\n                <View style={styles.pageInfo}>\n                    <View style={styles.pageInfoDescription}>\n                        <Text>Внимание! Оплата данного счета означает согласие с условиями поставки товара. Уведомление об оплате обязательно, в противном случае не гарантируется наличие товара на складе. Товар отпускается по факту прихода денег на р/с Поставщика, самовывозом, при наличии доверенности и документов удостоверяющих личность.</Text>\n                    </View>\n                </View>\n\n                <View style={styles.formInfo}>\n                    <View style={styles}>\n                        <Text>Образец платежного поручения</Text>\n                    </View>\n                </View>\n\n                <View style={styles.personBlock}>\n                    <View style={styles.executorMain}>\n                        <View style={styles.executorTitle}>\n                            <Text>Бенефециар:</Text>\n                        </View>\n                        <View style={styles.executorName}>\n                            <Text>{executor}</Text>\n                        </View>\n                        <View style={styles.executorBINNumber}>\n                            <Text>БИН: </Text>\n                            <Text>{executorBINNumber} </Text>\n                        </View>\n                    </View>\n                    <View style={styles.executorIIK}>\n                        <View style={styles}>\n                            <Text>ИИК</Text>\n                        </View>\n                        <View style={styles.executorNumbers}>\n                            <Text>{executorIIK}</Text>\n                        </View>\n                    </View>\n                    <View style={styles.executorKbe}>\n                        <View style={styles}>\n                            <Text>Кбе</Text>\n                        </View>\n                        <View style={styles.executorNumbers}>\n                            <Text>{executorKbe}</Text>\n                        </View>\n                    </View>\n                </View>\n\n                <View style={styles.personBlock}>\n                    <View style={styles.executorMain}>\n                        <View style={styles}>\n                            <Text>Банк бенефециара: </Text>\n                        </View>\n                        <View style={styles}>\n                            <Text>{executorBank}</Text>\n                        </View>\n                    </View>\n                    <View style={styles.exexcutorBIK}>\n                        <View style={styles}>\n                            <Text>БИК</Text>\n                        </View>\n                        <View style={styles.executorAddNumbers}>\n                            <Text>{executorBankBIK}</Text>\n                        </View>\n                    </View>\n                    <View style={styles.executorCode}>\n                        <View style={styles}>\n                            <Text>Код назначения платежа</Text>\n                        </View>\n                        <View style={styles.executorAddNumbers}>\n                            <Text>{executorBankCode}</Text>\n                        </View>\n                    </View>\n                </View>\n\n                <View style={styles.paymentTitle}>\n                    <View style={styles.paymentTitleText}>\n                        <Text>Счет на оплату №</Text>\n                        <Text>{docNumber} </Text>\n                        <Text>от </Text>\n                        <Text>{docDate}</Text>\n                    </View>\n                </View>\n\n                <View style={styles.line}>\n                    <View style={styles}>\n                        <Text></Text>\n                    </View>\n                </View>\n\n                <View style={styles.shipmentInfo}>\n                    <View style={styles.shipmentPerson}>\n                        <Text>Поставщик:</Text>\n                    </View>\n                    <View style={styles.shipmentData}>\n                        <Text>{executor}, </Text>\n                        <Text>{executorAdress} </Text>\n                    </View>\n\n                </View>\n                <View style={styles.shipmentInfo}>\n                    <View style={styles.shipmentPerson}>\n                        <Text>Покупатель: </Text>\n                    </View>\n                    <View style={styles.shipmentData}>\n                        <Text>ИИН/БИН: </Text>\n                        <Text>{clientBINNumber}, </Text>\n                        <Text>{client}, </Text>\n                        <Text>{clientAdress}</Text>\n                        <Text></Text>\n                    </View>\n                </View>\n\n                <View style={styles.contractInfo}>\n                    <View style={styles}>\n                        <Text>Договор: </Text>\n                    </View>\n                    <View style={styles.contractData}>\n                        <Text>{contract} </Text>\n                        <Text>{contractDate ? `от ${contractDate}` : ' '}</Text>\n                    </View>\n                </View>\n\n                <View style={styles.tableHeader}>\n                    <View style={styles.tableRow}>\n                        <View style={styles.firstCol}>\n                            <View style={styles}>\n                                <Text>№</Text>\n                            </View>\n                        </View>\n                        <View style={styles.secondCol}>\n                            <View style={styles}>\n                                <Text>Код</Text>\n                            </View>\n                        </View>\n                        <View style={styles.thirdCol}>\n                            <View style={styles}>\n                                <Text>Наименование</Text>\n                            </View>\n                        </View>\n                        <View style={styles.fourthCol}>\n                            <View style={styles}>\n                                <Text>Кол-во</Text>\n                            </View>\n                        </View>\n                        <View style={styles.fifthCol}>\n                            <View style={styles}>\n                                <Text>Ед.</Text>\n                            </View>\n                        </View>\n                        <View style={styles.sixthCol}>\n                            <View style={styles}>\n                                <Text>Цена</Text>\n                            </View>\n                        </View>\n                        <View style={styles.seventhCol}>\n                            <View style={styles}>\n                                <Text>Сумма</Text>\n                            </View>\n                        </View>\n                    </View>\n                </View>\n                <View>\n                    {tableArr}\n                </View>\n                <View style={styles.tableFooter}>\n                    <View style={styles.fullCost}>\n                        <View style={styles.fullCostText}>\n                            <Text>Итого: </Text>\n                        </View>\n                        <View style={styles.totalInfo}>\n                            <Text>{`${totalPay}.00`}</Text>\n                        </View>\n                    </View>\n                    <View style={styles.VATsize}>\n                        <View style={styles.fullCostText}>\n                            <Text>В том числе НДС: </Text>\n                        </View>\n                        <View style={styles.totalInfo}>\n                            <Text>{`${totalVAT}.00`}</Text>\n                        </View>\n                    </View>\n                    <View style={styles.fullCostInfo}>\n                        <View style={styles.fullCostData}>\n                            <Text>Всего наименований </Text>\n                            <Text>{total}, </Text>\n                            <Text>на сумму </Text>\n                            <Text>{`${totalPay}.00`} </Text>\n                            <Text>{currency}</Text>\n                        </View>\n                        <View style={styles.fullCostInWord}>\n                            <Text>Всего к оплате: </Text>\n                            <Text>{totalPayWord}</Text>\n                        </View>\n                    </View>\n                </View>\n\n                <View style={styles.line}>\n                    <View style={styles}>\n                        <Text></Text>\n                    </View>\n                </View>\n\n                <View style={styles.signatureBlock}>\n                    <View style={styles}>\n                        <Text>Исполнитель </Text>\n                    </View>\n                    <View style={styles.executorSecondName}>\n                        <Text>{executor}</Text>\n                    </View>\n                    <View style={styles.executorSignatureField}>\n                        <Text> // </Text>\n                    </View>\n                    <View style={styles.executorSignatureView}>\n                        <Image id='executorSignature' src={executorSignature !== null ? executorSignature : ' '} style={styles.executorSignature} alt='executorSignature'/>\n                    </View>\n                    <View style={styles.executorStampView}>\n                        <Image id='executorStamp' src={executorStamp !== null ? executorStamp : ' '} style={styles.executorStamp} alt='executorStamp'/>\n                    </View>\n                </View>\n\n\n\n\n\n            </Page>\n        </Document>\n\n\n    );\n};\n\nexport default Payment;","/home/kot/Desktop/create-documents/src/components/PreviewAct/PreviewAct.js",["110"],"import React from 'react';\nimport Act from '../Act/Act';\nimport { useSelector } from 'react-redux';\nimport { getData } from '../../store/inputData/selectors';\nimport { BlobProvider } from '@react-pdf/renderer';\nimport { Link } from 'react-router-dom';\n\nconst PreviewAct = () => {\n    const docName = 'Act.pdf';\n    const data = useSelector(getData);\n    const {\n        client,\n        clientTaxNumber,\n        clientBINNumber,\n        clientAdress,\n        clientBank,\n        executor,\n        executorTaxNumber,\n        executorBINNumber,\n        executorAdress,\n        executorBank,\n        contract,\n        contractDate,\n        contractСonditions,\n        destination,\n        proxy,\n        departureMethod,\n        CMR,\n        shipper,\n        consignee,\n        nameOfGoods,\n        dateOfWorks,\n        measure,\n        quantity,\n        unitPrice,\n        withoutVAT,\n        VATRate,\n        VATTax,\n        exciseRate,\n        exciseTax,\n        price,\n        docNumber,\n        docDate,\n        inventoryUsageInformation,\n        numberOfPafes,\n        documentsList,\n        beneficiary,\n        beneficiaryTaxNumber,\n        beneficiaryIIK,\n        beneficiaryKbe,\n        beneficiaryBank,\n        beneficiaryBIK,\n        beneficiaryBankCode,\n        paymentNumber,\n        paymentDate,\n        totalPayableForAll,\n        includingVAT,\n        totalItems,\n        totalForAmount,\n        currency,\n        totalPayable,\n        executerPosition,\n        executerSignature,\n        executerFullName,\n        clientPosition,\n        clientSignature,\n        clientFullName,\n        dateOfSigning,\n        executivePersonSupplier,\n        executivePersonSupplierPosition,\n        сhiefAccountant,\n        tableInfo\n     } = data;\n        \n    return (\n        <>\n            <div className='preview-button_block'>\n                <Link to='/filling' className='go-button'>Заполнение</Link>\n                <Link to='/preview' className='go-button'>Предпросмотр</Link>\n            </div>\n\n            <BlobProvider document={\n                <Act\n                    docNumber={docNumber}\n                    docDate={docDate}\n                    fileName={docName}\n                    client={client}\n                    clientTaxNumber={clientTaxNumber}\n                    clientBINNumber={clientBINNumber}\n                    clientAdress={clientAdress}\n                    clientBank={clientBank}\n                    executor={executor}\n                    executorTaxNumber={executorTaxNumber}\n                    executorBINNumber={executorBINNumber}\n                    executorAdress={executorAdress}\n                    executorBank={executorBank}\n                    contract={contract}\n                    contractDate={contractDate}\n                    contractСonditions={contractСonditions}\n                    destination={destination}\n                    proxy={proxy}\n                    departureMethod={departureMethod}\n                    CMR={CMR}\n                    shipper={shipper}\n                    consignee={consignee}\n                    nameOfGoods={nameOfGoods}\n                    dateOfWorks={dateOfWorks}\n                    measure={measure}\n                    quantity={quantity}\n                    unitPrice={unitPrice}\n                    withoutVAT={withoutVAT}\n                    VATRate={VATRate}\n                    VATTax={VATTax}\n                    exciseRate={exciseRate}\n                    exciseTax={exciseTax}\n                    price={price}\n                    inventoryUsageInformation={inventoryUsageInformation}\n                    numberOfPafes={numberOfPafes}\n                    documentsList={documentsList}\n                    beneficiary={beneficiary}\n                    beneficiaryTaxNumber={beneficiaryTaxNumber}\n                    beneficiaryIIK={beneficiaryIIK}\n                    beneficiaryKbe={beneficiaryKbe}\n                    beneficiaryBank={beneficiaryBank}\n                    beneficiaryBIK={beneficiaryBIK}\n                    beneficiaryBankCode={beneficiaryBankCode}\n                    paymentNumber={paymentNumber}\n                    paymentDate={paymentDate}\n                    totalPayableForAll={totalPayableForAll}\n                    includingVAT={includingVAT}\n                    totalItems={totalItems}\n                    totalForAmount={totalForAmount}\n                    currency={currency}\n                    totalPayable={totalPayable}\n                    executerPosition={executerPosition}\n                    executerSignature={executerSignature}\n                    executerFullName={executerFullName}\n                    clientPosition={clientPosition}\n                    clientSignature={clientSignature}\n                    clientFullName={clientFullName}\n                    dateOfSigning={dateOfSigning}\n                    executivePersonSupplier={executivePersonSupplier}\n                    executivePersonSupplierPosition={executivePersonSupplierPosition}\n                    сhiefAccountant={сhiefAccountant}     \n                    tableInfo={tableInfo}               \n                />}\n            >\n                {({ url }) => <iframe src={url} style={{ width: '100%', height: '80vh' }} />}\n            </BlobProvider>\n        </>\n    );\n};\n\nexport default PreviewAct;","/home/kot/Desktop/create-documents/src/components/form/ImageInput/ImageInput.js",[],"/home/kot/Desktop/create-documents/src/components/PreviewInvoice/PreviewInvoice.js",["111"],"import React from 'react';\nimport Invoice from '../Invoice/Invoice';\nimport { useSelector } from 'react-redux';\nimport { getData } from '../../store/inputData/selectors';\nimport { BlobProvider } from '@react-pdf/renderer';\nimport { Link } from 'react-router-dom';\n\nconst PreviewAct = () => {\n    const data = useSelector(getData);\n    const {\n        docNumber,\n        docDate,\n        client,\n        clientTaxNumber,\n        clientBINNumber,\n        clientAdress,\n        clientBank,\n        executor,\n        executorTaxNumber,\n        executorBINNumber,\n        executorAdress,\n        executorBank,\n        beneficiary,\n        beneficiaryTaxNumber,\n        beneficiaryIIK,\n        beneficiaryKbe,\n        beneficiaryBank,\n        beneficiaryBIK,\n        beneficiaryBankCode,\n        contract,\n        contractDate,\n        contractСonditions,\n        destination,\n        proxy,\n        departureMethod,\n        CMR,\n        shipper,\n        consignee,\n        totalPayableForAll,\n        includingVAT,\n        totalItems,\n        totalForAmount,\n        currency,\n        totalPayable,\n        inventoryUsageInformation,\n        numberOfPafes,\n        documentsList,\n        executorPosition,\n        executorFullName,\n        clientPosition,\n        clientFullName,\n        dateOfSigning,\n        executivePersonSupplier,\n        executivePersonSupplierPosition,\n        сhiefAccountant,\n        executerSignature,\n        clientSignature,\n        tableInfo,\n        procedureDate,\n        executorIIK,\n        clientIIKNumber,\n        clientBIKBank,\n        VATRate,\n        exciseRate\n\n     } = data;\n        \n    return (\n        <>\n            <div className='preview-button_block'>\n                <Link to='/filling' className='go-button'>Заполнение</Link>\n                <Link to='/preview' className='go-button'>Предпросмотр</Link>\n            </div>\n\n            <BlobProvider document={\n            <Invoice\n                    docNumber={docNumber}\n                    docDate={docDate}\n                    client={client}\n                    clientTaxNumber={clientTaxNumber}\n                    clientBINNumber={clientBINNumber}\n                    clientAdress={clientAdress}\n                    clientBank={clientBank}\n                    clientIIKNumber={clientIIKNumber}\n                    clientBIKBank={clientBIKBank}\n                    executor={executor}\n                    executorTaxNumber={executorTaxNumber}\n                    executorBINNumber={executorBINNumber}\n                    executorAdress={executorAdress}\n                    executorBank={executorBank}\n                    beneficiary={beneficiary}\n                    beneficiaryTaxNumber={beneficiaryTaxNumber}\n                    beneficiaryIIK={beneficiaryIIK}\n                    beneficiaryKbe={beneficiaryKbe}\n                    beneficiaryBank={beneficiaryBank}\n                    beneficiaryBIK={beneficiaryBIK}\n                    beneficiaryBankCode={beneficiaryBankCode}\n                    contract={contract}\n                    contractDate={contractDate}\n                    contractСonditions={contractСonditions}\n                    destination={destination}\n                    proxy={proxy}\n                    departureMethod={departureMethod}\n                    CMR={CMR}\n                    shipper={shipper}\n                    consignee={consignee}\n                    totalPayableForAll={totalPayableForAll}\n                    includingVAT={includingVAT}\n                    totalItems={totalItems}\n                    totalForAmount={totalForAmount}\n                    currency={currency}\n                    totalPayable={totalPayable}\n                    inventoryUsageInformation={inventoryUsageInformation}\n                    numberOfPafes={numberOfPafes}\n                    documentsList={documentsList}\n                    executorPosition={executorPosition}\n                    executorFullName={executorFullName}\n                    clientPosition={clientPosition}\n                    clientFullName={clientFullName}\n                    dateOfSigning={dateOfSigning}\n                    executivePersonSupplier={executivePersonSupplier}\n                    executivePersonSupplierPosition={executivePersonSupplierPosition}\n                    сhiefAccountant={сhiefAccountant}\n                    executerSignature={executerSignature}\n                    clientSignature={clientSignature}\n                    tableInfo={tableInfo}\n                    procedureDate={procedureDate}\n                    executorIIK={executorIIK}\n                    exciseRate={exciseRate}\n                    VATRate={VATRate}\n                    \n\n                />}\n            >\n                {({ url }) => <iframe src={url} style={{ width: '100%', height: '80vh' }} />}\n            </BlobProvider>\n        </>\n    );\n};\n\nexport default PreviewAct;","/home/kot/Desktop/create-documents/src/components/PreviewPayment/PreviewPayment.js",["112"],"import React from 'react';\nimport Payment from '../Payment/Payment';\nimport { useSelector } from 'react-redux';\nimport { getData } from '../../store/inputData/selectors';\nimport { BlobProvider } from '@react-pdf/renderer';\nimport { Link } from 'react-router-dom';\n\nconst PreviewAct = () => {\n    const data = useSelector(getData);\n    const {\n        docNumber,\n        docDate,\n        procedureDate,\n        client,\n        clientBINNumber,\n        clientAdress,\n        clientBank,\n        clientIIKNumber,\n        clientBIKBank,\n        executor,\n        executorBINNumber,\n        executorAdress,\n        executorIIK,\n        executorBank,\n        beneficiary,\n        beneficiaryTaxNumber,\n        executorKbe,\n        executorBankBIK,\n        executorBankCode,\n        contract,\n        contractDate,\n        contractСonditions,\n        destination,\n        proxy,\n        departureMethod,\n        CMR,\n        shipper,\n        consignee,\n        totalPayableForAll,\n        includingVAT,\n        totalItems,\n        totalForAmount,\n        currency,\n        totalPayable,\n        inventoryUsageInformation,\n        numberOfPafes,\n        documentsList,\n        executorPosition,\n        executorFullName,\n        executerSignature,\n        executivePersonSupplier,\n        executivePersonSupplierPosition,\n        clientPosition,\n        clientFullName,\n        clientSignature,\n        сhiefAccountant,\n        dateOfSigning,\n        tableInfo,\n        VATRate,\n        exciseRate,\n\n     } = data;\n        \n    return (\n        <>\n            <div className='preview-button_block'>\n                <Link to='/filling' className='go-button'>Заполнение</Link>\n                <Link to='/preview' className='go-button'>Предпросмотр</Link>\n            </div>\n\n            <BlobProvider document={\n            <Payment\n                docNumber={docNumber}\n                docDate={docDate}\n                procedureDate={procedureDate}\n                client={client}\n                clientBINNumber={clientBINNumber}\n                clientAdress={clientAdress}\n                clientBank={clientBank}\n                clientIIKNumber={clientIIKNumber}\n                clientBIKBank={clientBIKBank}\n                executor={executor}\n                executorBINNumber={executorBINNumber}\n                executorAdress={executorAdress}\n                executorIIK={executorIIK}\n                executorBank={executorBank}\n                beneficiary={beneficiary}\n                beneficiaryTaxNumber={beneficiaryTaxNumber}\n                executorKbe={executorKbe}\n                executorBankBIK={executorBankBIK}\n                executorBankCode={executorBankCode}\n                contract={contract}\n                contractDate={contractDate}\n                contractСonditions={contractСonditions}\n                destination={destination}\n                proxy={proxy}\n                departureMethod={departureMethod}\n                CMR={CMR}\n                shipper={shipper}\n                consignee={consignee}\n                totalPayableForAll={totalPayableForAll}\n                includingVAT={includingVAT}\n                totalItems={totalItems}\n                totalForAmount={totalForAmount}\n                currency={currency}\n                totalPayable={totalPayable}\n                inventoryUsageInformation={inventoryUsageInformation}\n                numberOfPafes={numberOfPafes}\n                documentsList={documentsList}\n                executorPosition={executorPosition}\n                executorFullName={executorFullName}\n                executerSignature={executerSignature}\n                executivePersonSupplier={executivePersonSupplier}\n                executivePersonSupplierPosition={executivePersonSupplierPosition}\n                clientPosition={clientPosition}\n                clientFullName={clientFullName}\n                clientSignature={clientSignature}\n                сhiefAccountant={сhiefAccountant}\n                dateOfSigning={dateOfSigning}  \n                tableInfo={tableInfo}      \n                VATRate={VATRate}   \n                exciseRate={exciseRate}\n      \n                />}\n            >\n                {({ url }) => <iframe src={url} style={{ width: '100%', height: '80vh' }} />}\n            </BlobProvider>\n        </>\n    );\n};\n\nexport default PreviewAct;","/home/kot/Desktop/create-documents/src/components/form/TableItem/TableItem.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":609,"column":31,"nodeType":"119","endLine":609,"endColumn":35},{"ruleId":"120","severity":1,"message":"121","line":148,"column":31,"nodeType":"122","endLine":148,"endColumn":93},{"ruleId":"120","severity":1,"message":"121","line":135,"column":31,"nodeType":"122","endLine":135,"endColumn":93},{"ruleId":"120","severity":1,"message":"121","line":126,"column":31,"nodeType":"122","endLine":126,"endColumn":93},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]